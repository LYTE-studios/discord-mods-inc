name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install deployment tools
      run: |
        python -m pip install --upgrade pip
        pip install ansible boto3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create backup
      run: |
        ansible-playbook deploy/backup.yml
      env:
        ANSIBLE_HOST_KEY_CHECKING: False
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        BACKUP_BUCKET: ${{ secrets.BACKUP_BUCKET }}

    - name: Deploy to production
      run: |
        ansible-playbook deploy/deploy.yml
      env:
        ANSIBLE_HOST_KEY_CHECKING: False
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VERSION: ${{ steps.get_version.outputs.VERSION }}
        DISCORD_TOKEN: ${{ secrets.PROD_DISCORD_TOKEN }}
        DISCORD_GUILD_ID: ${{ secrets.PROD_DISCORD_GUILD_ID }}
        SUPABASE_URL: ${{ secrets.PROD_SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.PROD_SUPABASE_KEY }}
        OPENAI_API_KEY: ${{ secrets.PROD_OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.PROD_GITHUB_TOKEN }}
        JWT_SECRET_KEY: ${{ secrets.PROD_JWT_SECRET }}
        ENCRYPTION_KEY: ${{ secrets.PROD_ENCRYPTION_KEY }}

    - name: Verify deployment
      run: |
        ansible-playbook deploy/verify.yml
      env:
        ANSIBLE_HOST_KEY_CHECKING: False
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        files: |
          LICENSE
          README.md
          CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify on success
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        slack-message: "✅ Successfully deployed version ${{ steps.get_version.outputs.VERSION }} to production"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Notify on failure
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        slack-message: "❌ Failed to deploy version ${{ steps.get_version.outputs.VERSION }} to production"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
---
- name: Setup Monitoring for Discord AI Bot
  hosts: production
  become: yes
  vars:
    app_name: discord-ai-bot
    prometheus_dir: "/opt/prometheus"
    grafana_dir: "/opt/grafana"

  tasks:
    - name: Install monitoring tools
      apt:
        name:
          - prometheus
          - prometheus-node-exporter
          - grafana
        state: present
        update_cache: yes

    - name: Configure Prometheus
      template:
        src: templates/prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
        mode: '0644'
      notify: restart prometheus

    - name: Configure Grafana
      template:
        src: templates/grafana.ini.j2
        dest: /etc/grafana/grafana.ini
        mode: '0644'
      notify: restart grafana

    - name: Import Grafana dashboards
      grafana_dashboard:
        grafana_url: "http://localhost:3000"
        grafana_user: "{{ grafana_admin_user }}"
        grafana_password: "{{ grafana_admin_password }}"
        state: present
        overwrite: yes
        path: "templates/dashboards/{{ item }}"
      with_items:
        - system_metrics.json
        - application_metrics.json
        - security_metrics.json

    - name: Setup alert rules
      template:
        src: templates/alert_rules.yml.j2
        dest: /etc/prometheus/alert_rules.yml
        mode: '0644'
      notify: reload prometheus

    - name: Configure Alertmanager
      template:
        src: templates/alertmanager.yml.j2
        dest: /etc/alertmanager/alertmanager.yml
        mode: '0644'
      notify: restart alertmanager

    - name: Setup log aggregation
      block:
        - name: Install Filebeat
          apt:
            name: filebeat
            state: present

        - name: Configure Filebeat
          template:
            src: templates/filebeat.yml.j2
            dest: /etc/filebeat/filebeat.yml
            mode: '0644'
          notify: restart filebeat

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - prometheus
        - prometheus-node-exporter
        - grafana-server
        - alertmanager
        - filebeat

    - name: Wait for services to be ready
      wait_for:
        port: "{{ item }}"
        timeout: 300
      with_items:
        - 9090  # Prometheus
        - 3000  # Grafana
        - 9093  # Alertmanager
        - 9200  # Elasticsearch

    - name: Setup monitoring checks
      cron:
        name: "Check {{ app_name }} health"
        minute: "*/5"
        job: "curl -f http://localhost:8080/health || curl -X POST {{ slack_webhook_url }} -H 'Content-type: application/json' --data '{\"text\":\"‚ùå Health check failed for {{ app_name }}!\"}'"

  handlers:
    - name: restart prometheus
      systemd:
        name: prometheus
        state: restarted

    - name: reload prometheus
      systemd:
        name: prometheus
        state: reloaded

    - name: restart grafana
      systemd:
        name: grafana-server
        state: restarted

    - name: restart alertmanager
      systemd:
        name: alertmanager
        state: restarted

    - name: restart filebeat
      systemd:
        name: filebeat
        state: restarted
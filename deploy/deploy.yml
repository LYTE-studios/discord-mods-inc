---
- name: Deploy Discord AI Bot
  hosts: production
  become: yes
  vars:
    app_name: discord-ai-bot
    docker_image: "ghcr.io/{{ github_repository }}:{{ version }}"
    app_dir: "/opt/{{ app_name }}"
    env_file: "{{ app_dir }}/.env"

  tasks:
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Create data directory
      file:
        path: "{{ app_dir }}/data"
        state: directory
        mode: '0755'

    - name: Create environment file
      template:
        src: templates/env.j2
        dest: "{{ env_file }}"
        mode: '0600'

    - name: Pull latest Docker image
      docker_image:
        name: "{{ docker_image }}"
        source: pull
        force_source: yes

    - name: Stop existing container
      docker_container:
        name: "{{ app_name }}"
        state: absent

    - name: Start new container
      docker_container:
        name: "{{ app_name }}"
        image: "{{ docker_image }}"
        state: started
        restart_policy: always
        env_file: "{{ env_file }}"
        volumes:
          - "{{ app_dir }}/data:/app/data"
        ports:
          - "8080:8080"
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
          interval: 30s
          timeout: 10s
          retries: 3
          start_period: 30s

    - name: Wait for container to be healthy
      docker_container_info:
        name: "{{ app_name }}"
      register: result
      until: result.container.State.Health.Status == "healthy"
      retries: 30
      delay: 10

    - name: Configure log rotation
      template:
        src: templates/logrotate.j2
        dest: /etc/logrotate.d/{{ app_name }}
        mode: '0644'

    - name: Setup monitoring
      include_tasks: monitoring.yml

    - name: Setup backup
      include_tasks: backup.yml

    - name: Notify deployment complete
      slack:
        token: "{{ slack_token }}"
        msg: "âœ… Deployment of {{ app_name }} version {{ version }} completed successfully"
        channel: "{{ slack_channel }}"
      when: slack_token is defined
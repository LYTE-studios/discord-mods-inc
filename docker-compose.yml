version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/web/staticfiles
      - media_volume:/app/web/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=web.config.settings
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/web/staticfiles:ro
      - media_volume:/app/web/media:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      web:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A web.config worker --concurrency=2 -l INFO
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=web.config.settings
      - PYTHONPATH=/app
    volumes:
      - media_volume:/app/web/media
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 384M
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  redis_data:
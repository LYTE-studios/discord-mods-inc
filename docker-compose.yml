services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app:delegated
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=web.config.settings
      - PYTHONPATH=/app
    depends_on:
      - redis
    networks:
      - web_network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - /var/log/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - web_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - web_network
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app:delegated
    command: celery -A web.config worker -l INFO
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=web.config.settings
      - PYTHONPATH=/app
    depends_on:
      - redis
    networks:
      - web_network
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app:delegated
    command: celery -A web.config beat -l INFO
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=web.config.settings
      - PYTHONPATH=/app
    depends_on:
      - redis
    networks:
      - web_network
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  redis_data:

networks:
  web_network:
    driver: bridge